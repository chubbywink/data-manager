@model RediMixLoad
@{
    bool Existing = Model.RediMixLoadID != 0;

    string p = Request.QueryString["p"];
    string s = Request.QueryString["s"];
    string t = Request.QueryString["t"];

    object parameters = new { p = p, s = s, t = t };
}

@if (Existing)
{
    <p><i class="fas fa-pencil-alt fa-fw"></i> You are editing <strong>@Model.RediMixLoadID</strong></p>
}
else if (Page.Message != null)
{
    <p>@Html.Raw(ViewData.ModelState.IsValid ? "<i class=\"fas fa-info-circle fa-fw\"></i> " : "<i class=\"fa fa-exclamation-triangle fa-fw\"></i>") @Html.Raw(Page.Message)</p>
}
else
{
    <p><i class="fas fa-info-circle fa-fw" title="Tip"></i> Enter the new Redi-Mix Load details below.</p>
}

@using (Html.BeginForm(null, null, parameters, FormMethod.Post, null))
{
    if (!ViewData.ModelState.IsValid)
    {
        <div class="ui-state-error ui-corner-all">
            @Html.ValidationSummary()
        </div>
    }
    <table class="edit">
        <tbody>
            <tr>
                <th>@Html.LabelFor(m => m.RediMixOrderID)</th>
                <td>@Html.SelectFor(m => m.RediMixOrderID, new SelectList(ViewBag.RediMixOrders as List<SelectListItem>, "Value", "Text", Model.RediMixOrderID), "Select")</td>
            </tr>
            <tr>
                <th>@Html.LabelFor(m => m.LoadNumber)</th>
                <td>@Html.InputFor(m => m.LoadNumber)</td>
            </tr>
            <tr>
                <th>Vehicle</th>
                <td>
                    <input class="autocomplete" data-target="#VehicleID" data-url="/Suggest/Users?driver=True" id="Vehicle" maxlength="256" name="q" placeholder="Search Vehicles…" type="text" value="@(Model.VehicleID.HasValue ? Model.Vehicle.VehicleLabel : "")" />
                    @Html.Hidden("VehicleID")
                </td>
            </tr>
            <tr>
                <th>Driver</th>
                <td>
                    <input class="autocomplete" data-target="#DriverID" data-url="/Suggest/Users?driver=True" id="Driver" maxlength="256" name="q" placeholder="Search Drivers…" type="text" value="@(Model.DriverID.HasValue ? Model.Employee.FullName : "")" />
                    @Html.Hidden("DriverID")
                </td>
            </tr>
            <tr>
                <th>@Html.LabelFor(m => m.RediMixLoadTypeID)</th>
                <td>@Html.SelectFor(m => m.RediMixLoadTypeID, new SelectList(ViewBag.RediMixLoadTypes as List<SelectListItem>, "Value", "Text", Model.RediMixLoadTypeID), "Select")</td>
            </tr>

            <tr>
                <th>@Html.LabelFor(m => m.StartTime)</th>
                <td>@Html.InputFor(m => m.StartTime, Model.StartTime.HasValue ? Model.StartTime.Value.ToShortTimeString() : "", new { @class = "time" })</td>
            </tr>
            <tr>
                <th>@Html.LabelFor(m => m.EndTime)</th>
                <td>@Html.InputFor(m => m.EndTime, Model.EndTime.HasValue ? Model.EndTime.Value.ToShortTimeString() : "", new { @class = "time" })</td>
            </tr>

            <tr>
                <th>@Html.LabelFor(m => m.YardsConcrete)</th>
                <td>@Html.InputFor(m => m.YardsConcrete)</td>
            </tr>
            <tr>
                <th>@Html.LabelFor(m => m.IsShortLoad)</th>
                <td>@Html.InputFor(m => m.IsShortLoad)</td>
            </tr>
            <tr>
                <th>@Html.LabelFor(m => m.TenOne)</th>
                <td>@Html.InputFor(m => m.TenOne)</td>
            </tr>
            <tr>
                <th>@Html.LabelFor(m => m.TenOneTime)</th>
                <td>@Html.InputFor(m => m.TenOneTime)</td>
            </tr>
            <tr>
                <th>@Html.LabelFor(m => m.TenTwo)</th>
                <td>@Html.InputFor(m => m.TenTwo)</td>
            </tr>
            <tr>
                <th>@Html.LabelFor(m => m.TenTwoTime)</th>
                <td>@Html.InputFor(m => m.TenTwoTime)</td>
            </tr>
            <tr>
                <th>@Html.LabelFor(m => m.TenThree)</th>
                <td>@Html.InputFor(m => m.TenThree)</td>
            </tr>
            <tr>
                <th>@Html.LabelFor(m => m.TenThreeTime)</th>
                <td>@Html.InputFor(m => m.TenThreeTime)</td>
            </tr>
            <tr>
                <th>@Html.LabelFor(m => m.TenNine)</th>
                <td>@Html.InputFor(m => m.TenNine)</td>
            </tr>
            <tr>
                <th>@Html.LabelFor(m => m.TenNineTime)</th>
                <td>@Html.InputFor(m => m.TenNineTime)</td>
            </tr>
            <tr class="footer">
                <td></td>
                <td>
                    @if (Existing)
                    {
                        <button name="Action" type="submit" value="Update"><i class="far fa-save fa-fw"></i> Update</button>
                        if (User.IsInRole("Admin"))
                        {
                            <button name="Action" type="submit" value="Delete"><i class="far fa-trash-alt fa-fw"></i> Delete</button>
                        }
                        @Html.HiddenFor(m => m.RediMixLoadID)
                    }
                    else
                    {
                        <button name="Action" type="submit" value="Create"><i class="fas fa-plus fa-fw"></i> Create</button>
                    }
                    <button data-href="@Url.Action("Index", parameters)" name="redirect" type="button" value="Cancel"><i class="fas fa-times fa-fw"></i> Cancel</button>
                </td>
            </tr>
        </tbody>
    </table>
}
