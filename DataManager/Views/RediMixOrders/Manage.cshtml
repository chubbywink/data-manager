@model RediMixOrder
@{
    bool Existing = Model.RediMixOrderID != 0;

    string p = Request.QueryString["p"];
    string s = Request.QueryString["s"];
    string t = Request.QueryString["t"];

    object parameters = new { p = p, s = s, t = t };
}

@if (Existing)
{
    <p><i class="fas fa-pencil-alt fa-fw"></i> You are editing <strong>@Model.RediMixOrderID</strong></p>
}
else if (Page.Message != null)
{
    <p>@Html.Raw(ViewData.ModelState.IsValid ? "<i class=\"fas fa-info-circle fa-fw\"></i> " : "<i class=\"fa fa-exclamation-triangle fa-fw\"></i>") @Html.Raw(Page.Message)</p>
}
else
{
    <p><i class="fas fa-info-circle fa-fw" title="Tip"></i> Enter the new Redi-Mix Order details below.</p>
}

@using (Html.BeginForm(null, null, parameters, FormMethod.Post, null))
{
    if (!ViewData.ModelState.IsValid)
    {
        <div class="ui-state-error ui-corner-all">
            @Html.ValidationSummary()
        </div>
    }
    <table class="edit">
        <tbody>
            <tr>
                <th>@Html.LabelFor(m => m.Customer)</th>
                <td>@Html.InputFor(m => m.Customer)</td>
            </tr>
            <tr>
                <th>@Html.LabelFor(m => m.Location)</th>
                <td>@Html.InputFor(m => m.Location)</td>
            </tr>
            <tr>
                <th>@Html.LabelFor(m => m.RediMixDestinationID)</th>
                <td>@Html.SelectFor(m => m.RediMixDestinationID, new SelectList(ViewBag.RediMixDestinations as List<SelectListItem>, "Value", "Text", Model.RediMixDestinationID), "Select")</td>
            </tr>
            <tr>
                <th>@Html.LabelFor(m => m.LocationID)</th>
                <td>@Html.SelectFor(m => m.LocationID, new SelectList(ViewBag.Locations as List<SelectListItem>, "Value", "Text", Model.LocationID), "Select")</td>
            </tr>

            <tr>
                <th>@Html.LabelFor(m => m.OrderStatusID)</th>
                <td>@Html.SelectFor(m => m.OrderStatusID, new SelectList(ViewBag.RediMixOrderStatus as List<SelectListItem>, "Value", "Text", Model.OrderStatusID), "Select")</td>
            </tr>
            <tr>
                <th>@Html.LabelFor(m => m.StartDate)</th>
                <td>@Html.InputFor(m => m.StartDate)</td>
            </tr>
            <tr>
                <th>@Html.LabelFor(m => m.StartTime)</th>
                <td>@Html.InputFor(m => m.StartTime, Model.StartTime.HasValue ? Model.StartTime.Value.ToShortTimeString() : "", new { @class = "time" })</td>
            </tr>
            <tr>
                <th>@Html.LabelFor(m => m.Duration)</th>
                <td>@Html.InputFor(m => m.Duration)</td>
            </tr>
            <tr>
                <th>@Html.LabelFor(m => m.YardsConcrete)</th>
                <td>@Html.InputFor(m => m.YardsConcrete)</td>
            </tr>
            <tr>
                <th>@Html.LabelFor(m => m.MixID)</th>
                <td>@Html.SelectFor(m => m.MixID, new SelectList(ViewBag.Mixes as List<SelectListItem>, "Value", "Text", Model.MixID), "Select")</td>
            </tr>
            <tr>
                <th>@Html.LabelFor(m => m.NumberOfLoads)</th>
                <td>@Html.InputFor(m => m.NumberOfLoads)</td>
            </tr>
            <tr>
                <th>@Html.LabelFor(m => m.IsComplete)</th>
                <td>@Html.InputFor(m => m.IsComplete)</td>
            </tr>
            <tr>
                <th>@Html.LabelFor(m => m.Notes)</th>
                <td>@Html.InputFor(m => m.Notes)</td>
            </tr>

            <tr class="footer">
                <td></td>
                <td>
                    @if (Existing)
                    {
                        <button name="Action" type="submit" value="Update"><i class="far fa-save fa-fw"></i> Update</button>
                        if (User.IsInRole("Admin"))
                        {
                            <button name="Action" type="submit" value="Delete"><i class="far fa-trash-alt fa-fw"></i> Delete</button>
                        }
                        @Html.HiddenFor(m => m.RediMixOrderID)
                    }
                    else
                    {
                        <button name="Action" type="submit" value="Create"><i class="fas fa-plus fa-fw"></i> Create</button>
                    }
                    <button data-href="@Url.Action("Index", parameters)" name="redirect" type="button" value="Cancel"><i class="fas fa-times fa-fw"></i> Cancel</button>
                </td>
            </tr>
        </tbody>
    </table>
}
